CONSTANT:
- Constants are fields whose values are set at compile time and can never be changed. 
- It can be accessed using class name.
- classes, structs, and arrays, cannot be const.
- Use the readonly modifier to create a class, struct, or array that is initialized one time at runtime (for example in a constructor) and thereafter cannot be changed.
- C# does not support const methods, properties, or events.
- when the compiler encounters a constant identifier in C# source code (for example, months), it substitutes the literal value directly into the intermediate language (IL) code that it produces. Because there is no variable address associated with a constant at run time, const fields cannot be passed by reference and cannot appear as an l-value in an expression.
- Use caution when you refer to constant values defined in other code such as DLLs. If a new version of the DLL defines a new value for the constant, your program will still hold the old literal value until it is recompiled against the new version.
- https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/constants
